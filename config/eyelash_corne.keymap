#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <0>;      // 0
    time-to-max-speed-ms = <0>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td_mt: tap_dance_mod_tap {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&hold_tap 0 PERIOD>, <&kp COLON>;
        };

        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&triple_dots>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        win_ios: win_ios {
            compatible = "zmk,behavior-key-toggle";
            label = "WIN_IOS";
            #binding-cells = <1>;
        };

        bhv_code_block: bhv_code_block {
            compatible = "zmk,behavior-hold-tap";
            label = "BHV_CODE_BLOCK";
            bindings = <&code_block>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    macros {
        mil_bendiciones: mil_bendiciones {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap_time 1>,
                <&kp M &kp I &kp L &kp SPACE &kp B &kp E &kp N &kp D &kp I &kp C &kp I &kp O &kp N &kp E &kp S>;

            label = "MIL_BENDICIONES";
        };

        triple_dots: triple_dots {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap_time 1>, <&kp DOT &kp DOT &kp DOT>;

            label = "TRIPLE_DOTS";
        };

        mil_gracias: mil_gracias {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap_time 1>,
                <&kp M &kp I &kp L &kp SPACE &kp G &kp R &kp A &kp C &kp I &kp A &kp S>;

            label = "MIL_GRACIAS";
        };

        code_block: code_block {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap_time 1>,
                <&kp GRAVE &kp GRAVE &kp GRAVE &kp SPACE &kp RET &kp RET &kp GRAVE &kp GRAVE &kp GRAVE &kp SPACE &kp UP_ARROW>;

            label = "CODE_BLOCK";
        };
    };

    combos {
        compatible = "zmk,combos";

        cmb_mil_bendiciones {
            bindings = <&mil_bendiciones>;
            key-positions = <33 37>;
        };

        cmb_mil_gracias {
            bindings = <&mil_gracias>;
            key-positions = <18 37>;
        };

        semi_colon {
            bindings = <&kp SEMI>;
            key-positions = <38 39>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp ESCAPE               &kp Q           &kp W           &kp E             &kp R               &kp T                            &none         &kp Y        &kp U                   &kp I              &kp O            &kp P                       &kp BSPC
&kp TAB                  &mt LEFT_WIN A  &mt LEFT_ALT S  &mt LEFT_SHIFT D  &mt LEFT_CONTROL F  &kp G                     &none  &none  &none  &kp H        &mt RIGHT_CONTROL J     &mt RIGHT_SHIFT K  &mt RIGHT_ALT L  &mt RIGHT_WIN SINGLE_QUOTE  &kp LS(SINGLE_QUOTE)
&mt LEFT_SHIFT CAPSLOCK  &kp Z           &kp X           &kp C             &kp V               &kp B        &kp SPACE           &none         &kp N        &kp M                   &kp COMMA          &td_mt           &kp FSLH                    &mt LEFT_ALT ENTER
                                                         &kp LEFT_CONTROL  &lt 3 LEFT_ALT      &lt 2 ENTER                                    &lt 1 SPACE  &mt RIGHT_SHIFT DELETE  &kp RALT
            >;

            // sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&bhv_code_block 0 GRAVE  &kp LS(NUMBER_1)      &kp LS(NUMBER_2)  &kp LS(NUMBER_3)  &kp LS(NUMBER_4)  &kp LS(NUMBER_5)                   &none         &kp LS(NUMBER_6)       &kp LS(NUMBER_7)  &kp LS(NUMBER_8)  &kp LS(NUMBER_9)  &kp LS(NUMBER_0)  &kp BSPC
&kp LS(GRAVE)            &kp NUMBER_1          &kp NUMBER_2      &kp NUMBER_3      &kp NUMBER_4      &kp NUMBER_5                &none  &none  &none  &kp NUMBER_6           &kp NUMBER_7      &kp NUMBER_8      &kp NUMBER_9      &kp NUMBER_0      &kp BACKSLASH
&trans                   &kp LS(LEFT_BRACKET)  &kp LEFT_BRACKET  &kp LESS_THAN     &kp GREATER_THAN  &kp RIGHT_BRACKET  &none           &none         &kp LS(RIGHT_BRACKET)  &kp LS(EQUAL)     &kp MINUS         &trans            &kp EQUAL         &kp LS(BACKSLASH)
                                                                 &trans            &trans            &trans                                           &trans                 &trans            &trans
            >;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp PAGE_UP    &kp HOME        &kp UP_ARROW    &kp END          &none                       &none         &kp F6               &kp F7                   &kp F8       &kp F9    &kp F10   &kp BSPC
&trans  &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &none                &none  &none  &none  &kp LS(RIGHT_ARROW)  &kp LS(LC(RIGHT_ARROW))  &kp LS(END)  &none     &kp BSLH  &kp GRAVE
&trans  &kp LC(Z)      &kp LC(X)       &kp LC(C)       &kp LC(V)        &none      &trans           &none         &kp RA(N)            &kp PLUS                 &kp LBRC     &kp RBRC  &kp PIPE  &kp TILDE
                                       &trans          &trans           &kp SPACE                                 &kp RET              &trans                   &trans
            >;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F1          &kp F2         &kp F3         &kp F4         &kp F5         &kp F6                                  &mmv MOVE_UP                     &kt F7           &kp F8          &kp F9          &kp F10       &kp F11          &kp F12
&bt BT_CLR_ALL  &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4            &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none            &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none
&bt BT_CLR      &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4  &none                    &mmv MOVE_DOWN                   &rgb_ug RGB_TOG  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &tog 4
                                              &trans         &trans         &trans                                                                   &mkp LCLK        &mkp RCLK       &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans            &trans  &trans                    &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans  &trans            &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans            &trans  &trans  &trans            &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &kp LEFT_COMMAND  &trans  &trans                                    &trans  &trans  &trans
            >;
        };
    };
};
